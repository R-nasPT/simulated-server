# Git Commands

## 1. Resetting to the Previous Commit/การรีเซ็ตไปยังคอมมิทก่อนหน้า

### Command/คำสั่ง:
git reset HEAD~1

### Description/คำอธิบาย:
คำสั่งนี้จะทำให้ HEAD ย้อนกลับไปยังคอมมิทที่ก่อนหน้าคอมมิทสุดท้าย โดยค่าเริ่มต้นจะใช้ตัวเลือก "mixed" ซึ่งหมายความว่าการเปลี่ยนแปลงที่ทำโดยคอมมิทล่าสุดจะยังคงอยู่ในไดเรกทอรีทำงานของคุณ

### Options/ตัวเลือก:
- `--soft`: เก็บการเปลี่ยนแปลงไว้ในพื้นที่จัดเตรียม (staging area) //git reset --soft HEAD~1
- `--mixed` (ค่าเริ่มต้น): เก็บการเปลี่ยนแปลงไว้ในไดเรกทอรีทำงาน แต่จะลบออกจากพื้นที่จัดเตรียม
- `--hard`: ลบการเปลี่ยนแปลงออกจากทั้งพื้นที่จัดเตรียมและไดเรกทอรีทำงาน //git reset --hard HEAD~1

=================================================================================

## 2. Reverting the Last Commit/การย้อนกลับคอมมิทล่าสุด

### Command:
git revert HEAD

### Description:
คำสั่งนี้จะสร้างคอมมิทใหม่ที่ยกเลิกการเปลี่ยนแปลงที่เกิดจากคอมมิทก่อนหน้า ใช้เมื่อคุณต้องการย้อนผลของคอมมิทโดยไม่ต้องแก้ไขประวัติคอมมิท

=================================================================================

## 3. แสดงอีเมลของผู้ใช้ที่ตั้งค่าไว้

### Command:
git config user.email

### Description:
คำสั่งนี้จะทำการแสดงอีเมลของผู้ใช้ที่ได้ตั้งค่าไว้ใน Git สำหรับการคอมมิทต่างๆ ที่เกี่ยวข้องกับโปรเจกต์ปัจจุบัน

### Options:
- **`git config user.email "newemail@example.com"`**: คำสั่งนี้จะตั้งค่าอีเมลของผู้ใช้ใหม่สำหรับ Git เฉพาะโปรเจกต์ปัจจุบัน

- **`git config --global user.email "newemail@example.com"`**: คำสั่งนี้จะตั้งค่าอีเมลของผู้ใช้ใหม่สำหรับ Git ในระดับ global ซึ่งจะใช้เป็นค่าพื้นฐานสำหรับทุกโปรเจกต์ในเครื่องของคุณ

=================================================================================

## 4. แสดงชื่อของผู้ใช้ที่ตั้งค่าไว้

### Command:
git config user.name

### Description:
คำสั่งนี้จะทำการแสดงชื่อของผู้ใช้ที่ได้ตั้งค่าไว้ใน Git สำหรับการคอมมิทต่างๆ ที่เกี่ยวข้องกับโปรเจกต์ปัจจุบัน

### Options:
- **`git config user.name "New Name"`**: คำสั่งนี้จะตั้งชื่อของผู้ใช้ใหม่สำหรับ Git เฉพาะโปรเจกต์ปัจจุบัน ซึ่งจะเขียนทับค่าที่ตั้งค่าไว้ในระดับ global

- **`git config --global user.name "New Name"`**: คำสั่งนี้จะตั้งค่าชื่อของผู้ใช้ใหม่สำหรับ Git ในระดับ global ซึ่งจะใช้เป็นค่าพื้นฐานสำหรับทุกโปรเจกต์ในเครื่องของคุณ

